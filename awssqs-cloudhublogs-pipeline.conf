input {
    sqs {
        id => "mule-sqs"
        access_key_id => "${aws_access_key}"
        secret_access_key => "${aws_secret_key}"
        #aws_credentials_file => "D:/aws_cred.yml"
        id_field => "sqs.id"
        md5_field => "sqs.md5"
        sent_timestamp_field => "sqs.sent_time"
        polling_frequency => 10
        queue => "CH_MULEAPP_LOGEVENTS"
        region => "ap-southeast-2"
        threads => 4
        codec => "json"
    }
}

filter {
    json {
        source => "message"
    }
    if [attributes][scheme] == 'false' or ![attributes][scheme] { mutate { add_field => { "attr.scheme" => "NA" } } }
    else { mutate { add_field => {"attr.scheme" => "%{[attributes][scheme]}" } } }
    if [attributes][method] == 'false' or ![attributes][method] { mutate { add_field => { "attr.method" => "NA" } } }
    else { mutate { add_field => {"attr.method" => "%{[attributes][method]}" } } }
    if [attributes][version] == 'false' or ![attributes][version] { mutate { add_field => { "attr.version" => "NA" } } }
    else { mutate { add_field => {"attr.version" => "%{[attributes][version]}" } } }
    if [attributes][requestUri] == 'false' or ![attributes][requestUri] { mutate { add_field => { "attr.requestUri" => "NA" } } }
    else { mutate { add_field => {"attr.requestUri" => "%{[attributes][requestUri]}" } } }
    if [attributes][requestPath] == 'false' or ![attributes][requestPath] { mutate { add_field => { "attr.requestPath" => "NA" } } }
    else { mutate { add_field => {"attr.requestPath" => "%{[attributes][requestPath]}" } } }
    if [attributes][remoteAddress] == 'false' or ![attributes][remoteAddress] { mutate { add_field => { "attr.remoteAddress" => "NA" } } }
    else { mutate { add_field => {"attr.remoteAddress" => "%{[attributes][remoteAddress]}" } } }
    if [attributes][localAddress] == 'false' or ![attributes][localAddress] { mutate { add_field => { "attr.localAddress" => "NA" } } }
    else { mutate { add_field => {"attr.localAddress" => "%{[attributes][localAddress]}" } } }
    if [attributes][queryString] == 'false' or ![attributes][queryString] { mutate { add_field => { "attr.queryString" => "NA" } } }
    else { mutate { add_field => {"attr.queryString" => "%{[attributes][queryString]}" } } }
    if [attributes][queryParams] == 'false' or ![attributes][queryParams] { mutate { add_field => { "attr.queryParams" => "NA" } } }
    else { mutate { add_field => {"attr.queryParams" => "%{[attributes][queryParams]}" } } }
    if [attributes][reasonPhrase] == 'false' or ![attributes][reasonPhrase] { mutate { add_field => { "attr.reasonPhrase" => "NA" } } }
    else { mutate { add_field => {"attr.reasonPhrase" => "%{[attributes][reasonPhrase]}" } } }
    if [attributes][statusCode] == 'false' or ![attributes][statusCode] { 
        if ![errorStatusCode] { if [stage] == 'EXIT' { mutate { add_field => {"attr.statusCode" => "200" } } } }
        else {mutate { add_field => {"attr.statusCode" => "%{[errorStatusCode]}" } } }
    }
    else { mutate { add_field => {"attr.statusCode" => "%{[attributes][statusCode]}" } } }
    if [attributes][headers][host] == 'false' or ![attributes][headers][host] { mutate { add_field => { "attr.headers_host" => "NA" } } }
    else { mutate { add_field => {"attr.headers_host" => "%{[attributes][headers][host]}" } } }
    
    if [attributes][headers][x-forwarded-for] == 'false' or ![attributes][headers][x-forwarded-for] { mutate { add_field => { "attr.headers_x_forwarded_for" => "127.0.0.1" } } }
    else { mutate { add_field => {"attr.headers_x_forwarded_for" => "%{[attributes][headers][x-forwarded-for]}" } } }
    if [attributes][headers][x-forwarded-port] == 'false' or ![attributes][headers][x-forwarded-port] { mutate { add_field => { "attr.headers_x_forwarded_port" => "0" } } }
    else { mutate { add_field => {"attr.headers_x_forwarded_port" => "%{[attributes][headers][x-forwarded-port]}" } } }
    if [attributes][headers][content-length] == 'false' or ![attributes][headers][content-length] { mutate { add_field => { "attr.headers_content_length" => "0" } } }
    else { mutate { add_field => {"attr.headers_content_length" => "%{[attributes][headers][content-length]}" } } }
    if [attributes][headers][content-type] == 'false' or ![attributes][headers][content-type] { mutate { add_field => { "attr.headers_content_type" => "NA" } } }
    else { mutate { add_field => {"attr.headers_content_type" => "%{[attributes][headers][content-type]}" } } }
    mutate { add_field => {"log-processor" => "EC2-LOGSTASH-SRV2" } }
    
    date {
        match => [ "timeStamp", "yyyy-MM-dd'T'HH:mm:ss'.'SSSZZ", "ISO8601" ] # 2019-05-20T11:53:26.112101Z 2019-08-16T23:04:34.959+05:30
        timezone => "UTC"
        target => "@timestamp"
    }
    #if [stage] == 'ENTRY' { geoip { source => "attr.headers_x_forwarded_for" } }
    geoip { 
        source => "attr.headers_x_forwarded_for" 
        target => "location"
    }
    mutate { remove_field => [ "@version", "sqs.sent_time", "sqs.md5", "sqs.id", "timestamp", "attributes", "errorStatusCode" ] }

}

output {
    elasticsearch {
        hosts => ["https://a1714295895845cd843b53203390fc0c.ap-southeast-2.aws.found.io:9243"]
        ssl => true
        manage_template => false
        #index => "logstash-mulecloudhub-%{+YYYY.MM.dd}" ~ muleappevents-2019.09.19
        #index => "logstash-mulecloudhub-2019.09.25"
        index => "logstash-mulecloudhub-%{+YYYY.MM.dd}"		
        user => "${es_cloud_user}"
        password => "${es_cloud_pass}"
        codec => "json"
    }
    #stdout { 
    #    codec => json_lines
    #}
	#https://stackoverflow.com/questions/37353365/calculating-time-between-events
    stdout { 
        #codec => rubydebug { metadata => false } 
        codec => dots
    }
    file {
        path => "/home/ubuntu/index-data/logstash-mulecloudhub-%{+YYYY.MM.dd}.json"
    }
}
